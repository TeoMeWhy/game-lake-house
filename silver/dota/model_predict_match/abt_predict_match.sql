-- Databricks notebook source
CREATE TABLE silver.dota.abt_match_predict

with summary as (

  SELECT 
    t1.match_id,
    date(t1.dt_match) as dt_match,
    radiant_win,
    isRadiant,

    avg(t2.qtRecency) as avgQtRecency ,
    avg(t2.qtMatches) as avgQtMatches ,
    avg(t2.avgAssists) as avgAssists ,
    avg(t2.avgCampsStacked) as avgCampsStacked ,
    avg(t2.avgCreepsStacked) as avgCreepsStacked ,
    avg(t2.avgDeaths) as avgDeaths ,
    avg(t2.avgDenies) as avgDenies ,
    avg(t2.avgFirstbloodClaimed) as avgFirstbloodClaimed ,
    avg(t2.avgGold) as avgGold ,
    avg(t2.avgGoldPerMin) as avgGoldPerMin ,
    avg(t2.avgGoldSpent) as avgGoldSpent ,
    avg(t2.avgHeroDamage) as avgHeroDamage ,
    avg(t2.avgHeroHealing) as avgHeroHealing ,
    avg(t2.avgKills) as avgKills ,
    avg(t2.avgLastHits) as avgLastHits ,
    avg(t2.avgLevel) as avgLevel ,
    avg(t2.avgNetWorth) as avgNetWorth ,
    avg(t2.avgRoshansKilled) as avgRoshansKilled ,
    avg(t2.avgRunePickups) as avgRunePickups ,
    avg(t2.avgXpPerMin) as avgXpPerMin ,
    avg(t2.avgWin) as avgWin ,
    avg(t2.avgTotalGold) as avgTotalGold ,
    avg(t2.avgTotalXp) as avgTotalXp ,
    avg(t2.avgKillsPerMin) as avgKillsPerMin ,
    avg(t2.avgKda) as avgKda ,
    avg(t2.avgNeutralKills) as avgNeutralKills ,
    avg(t2.avgTowerKills) as avgTowerKills ,
    avg(t2.avgCourierKills) as avgCourierKills ,
    avg(t2.avgLaneKills) as avgLaneKills ,
    avg(t2.avgHeroKills) as avgHeroKills ,
    avg(t2.avgObserverKills) as avgObserverKills ,
    avg(t2.avgSentryKills) as avgSentryKills ,
    avg(t2.avgRoshanKills) as avgRoshanKills ,
    avg(t2.avgNecronomiconKills) as avgNecronomiconKills ,
    avg(t2.avgAncientKills) as avgAncientKills ,
    avg(t2.avgBuybackCount) as avgBuybackCount ,
    avg(t2.avgObserverUses) as avgObserverUses ,
    avg(t2.avgSentryUses) as avgSentryUses ,
    avg(t2.avgLaneEfficiency) as avgLaneEfficiency,
    min(t2.qtRecency) as minRecency,
    min(t2.qtMatches) as minMatches,
    min(t2.avgAssists) as minAssists,
    min(t2.avgCampsStacked) as minCampsStacked,
    min(t2.avgCreepsStacked) as minCreepsStacked,
    min(t2.avgDeaths) as minDeaths,
    min(t2.avgDenies) as minDenies,
    min(t2.avgFirstbloodClaimed) as minFirstbloodClaimed,
    min(t2.avgGold) as minGold,
    min(t2.avgGoldPerMin) as minGoldPerMin,
    min(t2.avgGoldSpent) as minGoldSpent,
    min(t2.avgHeroDamage) as minHeroDamage,
    min(t2.avgHeroHealing) as minHeroHealing,
    min(t2.avgKills) as minKills,
    min(t2.avgLastHits) as minLastHits,
    min(t2.avgLevel) as minLevel,
    min(t2.avgNetWorth) as minNetWorth,
    min(t2.avgRoshansKilled) as minRoshansKilled,
    min(t2.avgRunePickups) as minRunePickups,
    min(t2.avgXpPerMin) as minXpPerMin,
    min(t2.avgWin) as minWin,
    min(t2.avgTotalGold) as minTotalGold,
    min(t2.avgTotalXp) as minTotalXp,
    min(t2.avgKillsPerMin) as minKillsPerMin,
    min(t2.avgKda) as minKda,
    min(t2.avgNeutralKills) as minNeutralKills,
    min(t2.avgTowerKills) as minTowerKills,
    min(t2.avgCourierKills) as minCourierKills,
    min(t2.avgLaneKills) as minLaneKills,
    min(t2.avgHeroKills) as minHeroKills,
    min(t2.avgObserverKills) as minObserverKills,
    min(t2.avgSentryKills) as minSentryKills,
    min(t2.avgRoshanKills) as minRoshanKills,
    min(t2.avgNecronomiconKills) as minNecronomiconKills,
    min(t2.avgAncientKills) as minAncientKills,
    min(t2.avgBuybackCount) as minBuybackCount,
    min(t2.avgObserverUses) as minObserverUses,
    min(t2.avgSentryUses) as minSentryUses,
    min(t2.avgLaneEfficiency) as minLaneEfficiency,
    max(t2.qtRecency) as maxRecency,
    max(t2.qtMatches) as maxMatches,
    max(t2.avgAssists) as maxAssists,
    max(t2.avgCampsStacked) as maxCampsStacked,
    max(t2.avgCreepsStacked) as maxCreepsStacked,
    max(t2.avgDeaths) as maxDeaths,
    max(t2.avgDenies) as maxDenies,
    max(t2.avgFirstbloodClaimed) as maxFirstbloodClaimed,
    max(t2.avgGold) as maxGold,
    max(t2.avgGoldPerMin) as maxGoldPerMin,
    max(t2.avgGoldSpent) as maxGoldSpent,
    max(t2.avgHeroDamage) as maxHeroDamage,
    max(t2.avgHeroHealing) as maxHeroHealing,
    max(t2.avgKills) as maxKills,
    max(t2.avgLastHits) as maxLastHits,
    max(t2.avgLevel) as maxLevel,
    max(t2.avgNetWorth) as maxNetWorth,
    max(t2.avgRoshansKilled) as maxRoshansKilled,
    max(t2.avgRunePickups) as maxRunePickups,
    max(t2.avgXpPerMin) as maxXpPerMin,
    max(t2.avgWin) as maxWin,
    max(t2.avgTotalGold) as maxTotalGold,
    max(t2.avgTotalXp) as maxTotalXp,
    max(t2.avgKillsPerMin) as maxKillsPerMin,
    max(t2.avgKda) as maxKda,
    max(t2.avgNeutralKills) as maxNeutralKills,
    max(t2.avgTowerKills) as maxTowerKills,
    max(t2.avgCourierKills) as maxCourierKills,
    max(t2.avgLaneKills) as maxLaneKills,
    max(t2.avgHeroKills) as maxHeroKills,
    max(t2.avgObserverKills) as maxObserverKills,
    max(t2.avgSentryKills) as maxSentryKills,
    max(t2.avgRoshanKills) as maxRoshanKills,
    max(t2.avgNecronomiconKills) as maxNecronomiconKills,
    max(t2.avgAncientKills) as maxAncientKills,
    max(t2.avgBuybackCount) as maxBuybackCount,
    max(t2.avgObserverUses) as maxObserverUses,
    max(t2.avgSentryUses) as maxSentryUses,
    max(t2.avgLaneEfficiency) as maxLaneEfficiency


  FROM bronze.dota.match_players as t1

  left join silver.dota.fs_player_summary_lag90 as t2
  on t2.idAccount = t1.account_id
  and t2.dtReference = date(t1.dt_match)

  where t1.dt_match >= '2023-01-01'
  and t1.dt_match <= '2023-01-10'

  group by 1,2,3,4
  order by 1,4
),

tb_case as (

  select
    match_id,
    dt_match,
    max(radiant_win) as flRadiantWin,

    sum(case when isRadiant = TRUE then avgQtRecency end) as avgQtRecencyRadiant,
    sum(case when isRadiant = TRUE then avgQtMatches end) as avgQtMatchesRadiant,
    sum(case when isRadiant = TRUE then avgAssists end) as avgAssistsRadiant,
    sum(case when isRadiant = TRUE then avgCampsStacked end) as avgCampsStackedRadiant,
    sum(case when isRadiant = TRUE then avgCreepsStacked end) as avgCreepsStackedRadiant,
    sum(case when isRadiant = TRUE then avgDeaths end) as avgDeathsRadiant,
    sum(case when isRadiant = TRUE then avgDenies end) as avgDeniesRadiant,
    sum(case when isRadiant = TRUE then avgFirstbloodClaimed end) as avgFirstbloodClaimedRadiant,
    sum(case when isRadiant = TRUE then avgGold end) as avgGoldRadiant,
    sum(case when isRadiant = TRUE then avgGoldPerMin end) as avgGoldPerMinRadiant,
    sum(case when isRadiant = TRUE then avgGoldSpent end) as avgGoldSpentRadiant,
    sum(case when isRadiant = TRUE then avgHeroDamage end) as avgHeroDamageRadiant,
    sum(case when isRadiant = TRUE then avgHeroHealing end) as avgHeroHealingRadiant,
    sum(case when isRadiant = TRUE then avgKills end) as avgKillsRadiant,
    sum(case when isRadiant = TRUE then avgLastHits end) as avgLastHitsRadiant,
    sum(case when isRadiant = TRUE then avgLevel end) as avgLevelRadiant,
    sum(case when isRadiant = TRUE then avgNetWorth end) as avgNetWorthRadiant,
    sum(case when isRadiant = TRUE then avgRoshansKilled end) as avgRoshansKilledRadiant,
    sum(case when isRadiant = TRUE then avgRunePickups end) as avgRunePickupsRadiant,
    sum(case when isRadiant = TRUE then avgXpPerMin end) as avgXpPerMinRadiant,
    sum(case when isRadiant = TRUE then avgWin end) as avgWinRadiant,
    sum(case when isRadiant = TRUE then avgTotalGold end) as avgTotalGoldRadiant,
    sum(case when isRadiant = TRUE then avgTotalXp end) as avgTotalXpRadiant,
    sum(case when isRadiant = TRUE then avgKillsPerMin end) as avgKillsPerMinRadiant,
    sum(case when isRadiant = TRUE then avgKda end) as avgKdaRadiant,
    sum(case when isRadiant = TRUE then avgNeutralKills end) as avgNeutralKillsRadiant,
    sum(case when isRadiant = TRUE then avgTowerKills end) as avgTowerKillsRadiant,
    sum(case when isRadiant = TRUE then avgCourierKills end) as avgCourierKillsRadiant,
    sum(case when isRadiant = TRUE then avgLaneKills end) as avgLaneKillsRadiant,
    sum(case when isRadiant = TRUE then avgHeroKills end) as avgHeroKillsRadiant,
    sum(case when isRadiant = TRUE then avgObserverKills end) as avgObserverKillsRadiant,
    sum(case when isRadiant = TRUE then avgSentryKills end) as avgSentryKillsRadiant,
    sum(case when isRadiant = TRUE then avgRoshanKills end) as avgRoshanKillsRadiant,
    sum(case when isRadiant = TRUE then avgNecronomiconKills end) as avgNecronomiconKillsRadiant,
    sum(case when isRadiant = TRUE then avgAncientKills end) as avgAncientKillsRadiant,
    sum(case when isRadiant = TRUE then avgBuybackCount end) as avgBuybackCountRadiant,
    sum(case when isRadiant = TRUE then avgObserverUses end) as avgObserverUsesRadiant,
    sum(case when isRadiant = TRUE then avgSentryUses end) as avgSentryUsesRadiant,
    sum(case when isRadiant = TRUE then avgLaneEfficiency end) as avgLaneEfficiencyRadiant,
    sum(case when isRadiant = TRUE then minRecency end) as minRecencyRadiant,
    sum(case when isRadiant = TRUE then minMatches end) as minMatchesRadiant,
    sum(case when isRadiant = TRUE then minAssists end) as minAssistsRadiant,
    sum(case when isRadiant = TRUE then minCampsStacked end) as minCampsStackedRadiant,
    sum(case when isRadiant = TRUE then minCreepsStacked end) as minCreepsStackedRadiant,
    sum(case when isRadiant = TRUE then minDeaths end) as minDeathsRadiant,
    sum(case when isRadiant = TRUE then minDenies end) as minDeniesRadiant,
    sum(case when isRadiant = TRUE then minFirstbloodClaimed end) as minFirstbloodClaimedRadiant,
    sum(case when isRadiant = TRUE then minGold end) as minGoldRadiant,
    sum(case when isRadiant = TRUE then minGoldPerMin end) as minGoldPerMinRadiant,
    sum(case when isRadiant = TRUE then minGoldSpent end) as minGoldSpentRadiant,
    sum(case when isRadiant = TRUE then minHeroDamage end) as minHeroDamageRadiant,
    sum(case when isRadiant = TRUE then minHeroHealing end) as minHeroHealingRadiant,
    sum(case when isRadiant = TRUE then minKills end) as minKillsRadiant,
    sum(case when isRadiant = TRUE then minLastHits end) as minLastHitsRadiant,
    sum(case when isRadiant = TRUE then minLevel end) as minLevelRadiant,
    sum(case when isRadiant = TRUE then minNetWorth end) as minNetWorthRadiant,
    sum(case when isRadiant = TRUE then minRoshansKilled end) as minRoshansKilledRadiant,
    sum(case when isRadiant = TRUE then minRunePickups end) as minRunePickupsRadiant,
    sum(case when isRadiant = TRUE then minXpPerMin end) as minXpPerMinRadiant,
    sum(case when isRadiant = TRUE then minWin end) as minWinRadiant,
    sum(case when isRadiant = TRUE then minTotalGold end) as minTotalGoldRadiant,
    sum(case when isRadiant = TRUE then minTotalXp end) as minTotalXpRadiant,
    sum(case when isRadiant = TRUE then minKillsPerMin end) as minKillsPerMinRadiant,
    sum(case when isRadiant = TRUE then minKda end) as minKdaRadiant,
    sum(case when isRadiant = TRUE then minNeutralKills end) as minNeutralKillsRadiant,
    sum(case when isRadiant = TRUE then minTowerKills end) as minTowerKillsRadiant,
    sum(case when isRadiant = TRUE then minCourierKills end) as minCourierKillsRadiant,
    sum(case when isRadiant = TRUE then minLaneKills end) as minLaneKillsRadiant,
    sum(case when isRadiant = TRUE then minHeroKills end) as minHeroKillsRadiant,
    sum(case when isRadiant = TRUE then minObserverKills end) as minObserverKillsRadiant,
    sum(case when isRadiant = TRUE then minSentryKills end) as minSentryKillsRadiant,
    sum(case when isRadiant = TRUE then minRoshanKills end) as minRoshanKillsRadiant,
    sum(case when isRadiant = TRUE then minNecronomiconKills end) as minNecronomiconKillsRadiant,
    sum(case when isRadiant = TRUE then minAncientKills end) as minAncientKillsRadiant,
    sum(case when isRadiant = TRUE then minBuybackCount end) as minBuybackCountRadiant,
    sum(case when isRadiant = TRUE then minObserverUses end) as minObserverUsesRadiant,
    sum(case when isRadiant = TRUE then minSentryUses end) as minSentryUsesRadiant,
    sum(case when isRadiant = TRUE then minLaneEfficiency end) as minLaneEfficiencyRadiant,
    sum(case when isRadiant = TRUE then maxRecency end) as maxRecencyRadiant,
    sum(case when isRadiant = TRUE then maxMatches end) as maxMatchesRadiant,
    sum(case when isRadiant = TRUE then maxAssists end) as maxAssistsRadiant,
    sum(case when isRadiant = TRUE then maxCampsStacked end) as maxCampsStackedRadiant,
    sum(case when isRadiant = TRUE then maxCreepsStacked end) as maxCreepsStackedRadiant,
    sum(case when isRadiant = TRUE then maxDeaths end) as maxDeathsRadiant,
    sum(case when isRadiant = TRUE then maxDenies end) as maxDeniesRadiant,
    sum(case when isRadiant = TRUE then maxFirstbloodClaimed end) as maxFirstbloodClaimedRadiant,
    sum(case when isRadiant = TRUE then maxGold end) as maxGoldRadiant,
    sum(case when isRadiant = TRUE then maxGoldPerMin end) as maxGoldPerMinRadiant,
    sum(case when isRadiant = TRUE then maxGoldSpent end) as maxGoldSpentRadiant,
    sum(case when isRadiant = TRUE then maxHeroDamage end) as maxHeroDamageRadiant,
    sum(case when isRadiant = TRUE then maxHeroHealing end) as maxHeroHealingRadiant,
    sum(case when isRadiant = TRUE then maxKills end) as maxKillsRadiant,
    sum(case when isRadiant = TRUE then maxLastHits end) as maxLastHitsRadiant,
    sum(case when isRadiant = TRUE then maxLevel end) as maxLevelRadiant,
    sum(case when isRadiant = TRUE then maxNetWorth end) as maxNetWorthRadiant,
    sum(case when isRadiant = TRUE then maxRoshansKilled end) as maxRoshansKilledRadiant,
    sum(case when isRadiant = TRUE then maxRunePickups end) as maxRunePickupsRadiant,
    sum(case when isRadiant = TRUE then maxXpPerMin end) as maxXpPerMinRadiant,
    sum(case when isRadiant = TRUE then maxWin end) as maxWinRadiant,
    sum(case when isRadiant = TRUE then maxTotalGold end) as maxTotalGoldRadiant,
    sum(case when isRadiant = TRUE then maxTotalXp end) as maxTotalXpRadiant,
    sum(case when isRadiant = TRUE then maxKillsPerMin end) as maxKillsPerMinRadiant,
    sum(case when isRadiant = TRUE then maxKda end) as maxKdaRadiant,
    sum(case when isRadiant = TRUE then maxNeutralKills end) as maxNeutralKillsRadiant,
    sum(case when isRadiant = TRUE then maxTowerKills end) as maxTowerKillsRadiant,
    sum(case when isRadiant = TRUE then maxCourierKills end) as maxCourierKillsRadiant,
    sum(case when isRadiant = TRUE then maxLaneKills end) as maxLaneKillsRadiant,
    sum(case when isRadiant = TRUE then maxHeroKills end) as maxHeroKillsRadiant,
    sum(case when isRadiant = TRUE then maxObserverKills end) as maxObserverKillsRadiant,
    sum(case when isRadiant = TRUE then maxSentryKills end) as maxSentryKillsRadiant,
    sum(case when isRadiant = TRUE then maxRoshanKills end) as maxRoshanKillsRadiant,
    sum(case when isRadiant = TRUE then maxNecronomiconKills end) as maxNecronomiconKillsRadiant,
    sum(case when isRadiant = TRUE then maxAncientKills end) as maxAncientKillsRadiant,
    sum(case when isRadiant = TRUE then maxBuybackCount end) as maxBuybackCountRadiant,
    sum(case when isRadiant = TRUE then maxObserverUses end) as maxObserverUsesRadiant,
    sum(case when isRadiant = TRUE then maxSentryUses end) as maxSentryUsesRadiant,
    sum(case when isRadiant = TRUE then maxLaneEfficiency end) as maxLaneEfficiencyRadiant,

    sum(case when isRadiant = FALSE then avgQtRecency end) as avgQtRecencyDire,
    sum(case when isRadiant = FALSE then avgQtMatches end) as avgQtMatchesDire,
    sum(case when isRadiant = FALSE then avgAssists end) as avgAssistsDire,
    sum(case when isRadiant = FALSE then avgCampsStacked end) as avgCampsStackedDire,
    sum(case when isRadiant = FALSE then avgCreepsStacked end) as avgCreepsStackedDire,
    sum(case when isRadiant = FALSE then avgDeaths end) as avgDeathsDire,
    sum(case when isRadiant = FALSE then avgDenies end) as avgDeniesDire,
    sum(case when isRadiant = FALSE then avgFirstbloodClaimed end) as avgFirstbloodClaimedDire,
    sum(case when isRadiant = FALSE then avgGold end) as avgGoldDire,
    sum(case when isRadiant = FALSE then avgGoldPerMin end) as avgGoldPerMinDire,
    sum(case when isRadiant = FALSE then avgGoldSpent end) as avgGoldSpentDire,
    sum(case when isRadiant = FALSE then avgHeroDamage end) as avgHeroDamageDire,
    sum(case when isRadiant = FALSE then avgHeroHealing end) as avgHeroHealingDire,
    sum(case when isRadiant = FALSE then avgKills end) as avgKillsDire,
    sum(case when isRadiant = FALSE then avgLastHits end) as avgLastHitsDire,
    sum(case when isRadiant = FALSE then avgLevel end) as avgLevelDire,
    sum(case when isRadiant = FALSE then avgNetWorth end) as avgNetWorthDire,
    sum(case when isRadiant = FALSE then avgRoshansKilled end) as avgRoshansKilledDire,
    sum(case when isRadiant = FALSE then avgRunePickups end) as avgRunePickupsDire,
    sum(case when isRadiant = FALSE then avgXpPerMin end) as avgXpPerMinDire,
    sum(case when isRadiant = FALSE then avgWin end) as avgWinDire,
    sum(case when isRadiant = FALSE then avgTotalGold end) as avgTotalGoldDire,
    sum(case when isRadiant = FALSE then avgTotalXp end) as avgTotalXpDire,
    sum(case when isRadiant = FALSE then avgKillsPerMin end) as avgKillsPerMinDire,
    sum(case when isRadiant = FALSE then avgKda end) as avgKdaDire,
    sum(case when isRadiant = FALSE then avgNeutralKills end) as avgNeutralKillsDire,
    sum(case when isRadiant = FALSE then avgTowerKills end) as avgTowerKillsDire,
    sum(case when isRadiant = FALSE then avgCourierKills end) as avgCourierKillsDire,
    sum(case when isRadiant = FALSE then avgLaneKills end) as avgLaneKillsDire,
    sum(case when isRadiant = FALSE then avgHeroKills end) as avgHeroKillsDire,
    sum(case when isRadiant = FALSE then avgObserverKills end) as avgObserverKillsDire,
    sum(case when isRadiant = FALSE then avgSentryKills end) as avgSentryKillsDire,
    sum(case when isRadiant = FALSE then avgRoshanKills end) as avgRoshanKillsDire,
    sum(case when isRadiant = FALSE then avgNecronomiconKills end) as avgNecronomiconKillsDire,
    sum(case when isRadiant = FALSE then avgAncientKills end) as avgAncientKillsDire,
    sum(case when isRadiant = FALSE then avgBuybackCount end) as avgBuybackCountDire,
    sum(case when isRadiant = FALSE then avgObserverUses end) as avgObserverUsesDire,
    sum(case when isRadiant = FALSE then avgSentryUses end) as avgSentryUsesDire,
    sum(case when isRadiant = FALSE then avgLaneEfficiency end) as avgLaneEfficiencyDire,
    sum(case when isRadiant = FALSE then minRecency end) as minRecencyDire,
    sum(case when isRadiant = FALSE then minMatches end) as minMatchesDire,
    sum(case when isRadiant = FALSE then minAssists end) as minAssistsDire,
    sum(case when isRadiant = FALSE then minCampsStacked end) as minCampsStackedDire,
    sum(case when isRadiant = FALSE then minCreepsStacked end) as minCreepsStackedDire,
    sum(case when isRadiant = FALSE then minDeaths end) as minDeathsDire,
    sum(case when isRadiant = FALSE then minDenies end) as minDeniesDire,
    sum(case when isRadiant = FALSE then minFirstbloodClaimed end) as minFirstbloodClaimedDire,
    sum(case when isRadiant = FALSE then minGold end) as minGoldDire,
    sum(case when isRadiant = FALSE then minGoldPerMin end) as minGoldPerMinDire,
    sum(case when isRadiant = FALSE then minGoldSpent end) as minGoldSpentDire,
    sum(case when isRadiant = FALSE then minHeroDamage end) as minHeroDamageDire,
    sum(case when isRadiant = FALSE then minHeroHealing end) as minHeroHealingDire,
    sum(case when isRadiant = FALSE then minKills end) as minKillsDire,
    sum(case when isRadiant = FALSE then minLastHits end) as minLastHitsDire,
    sum(case when isRadiant = FALSE then minLevel end) as minLevelDire,
    sum(case when isRadiant = FALSE then minNetWorth end) as minNetWorthDire,
    sum(case when isRadiant = FALSE then minRoshansKilled end) as minRoshansKilledDire,
    sum(case when isRadiant = FALSE then minRunePickups end) as minRunePickupsDire,
    sum(case when isRadiant = FALSE then minXpPerMin end) as minXpPerMinDire,
    sum(case when isRadiant = FALSE then minWin end) as minWinDire,
    sum(case when isRadiant = FALSE then minTotalGold end) as minTotalGoldDire,
    sum(case when isRadiant = FALSE then minTotalXp end) as minTotalXpDire,
    sum(case when isRadiant = FALSE then minKillsPerMin end) as minKillsPerMinDire,
    sum(case when isRadiant = FALSE then minKda end) as minKdaDire,
    sum(case when isRadiant = FALSE then minNeutralKills end) as minNeutralKillsDire,
    sum(case when isRadiant = FALSE then minTowerKills end) as minTowerKillsDire,
    sum(case when isRadiant = FALSE then minCourierKills end) as minCourierKillsDire,
    sum(case when isRadiant = FALSE then minLaneKills end) as minLaneKillsDire,
    sum(case when isRadiant = FALSE then minHeroKills end) as minHeroKillsDire,
    sum(case when isRadiant = FALSE then minObserverKills end) as minObserverKillsDire,
    sum(case when isRadiant = FALSE then minSentryKills end) as minSentryKillsDire,
    sum(case when isRadiant = FALSE then minRoshanKills end) as minRoshanKillsDire,
    sum(case when isRadiant = FALSE then minNecronomiconKills end) as minNecronomiconKillsDire,
    sum(case when isRadiant = FALSE then minAncientKills end) as minAncientKillsDire,
    sum(case when isRadiant = FALSE then minBuybackCount end) as minBuybackCountDire,
    sum(case when isRadiant = FALSE then minObserverUses end) as minObserverUsesDire,
    sum(case when isRadiant = FALSE then minSentryUses end) as minSentryUsesDire,
    sum(case when isRadiant = FALSE then minLaneEfficiency end) as minLaneEfficiencyDire,
    sum(case when isRadiant = FALSE then maxRecency end) as maxRecencyDire,
    sum(case when isRadiant = FALSE then maxMatches end) as maxMatchesDire,
    sum(case when isRadiant = FALSE then maxAssists end) as maxAssistsDire,
    sum(case when isRadiant = FALSE then maxCampsStacked end) as maxCampsStackedDire,
    sum(case when isRadiant = FALSE then maxCreepsStacked end) as maxCreepsStackedDire,
    sum(case when isRadiant = FALSE then maxDeaths end) as maxDeathsDire,
    sum(case when isRadiant = FALSE then maxDenies end) as maxDeniesDire,
    sum(case when isRadiant = FALSE then maxFirstbloodClaimed end) as maxFirstbloodClaimedDire,
    sum(case when isRadiant = FALSE then maxGold end) as maxGoldDire,
    sum(case when isRadiant = FALSE then maxGoldPerMin end) as maxGoldPerMinDire,
    sum(case when isRadiant = FALSE then maxGoldSpent end) as maxGoldSpentDire,
    sum(case when isRadiant = FALSE then maxHeroDamage end) as maxHeroDamageDire,
    sum(case when isRadiant = FALSE then maxHeroHealing end) as maxHeroHealingDire,
    sum(case when isRadiant = FALSE then maxKills end) as maxKillsDire,
    sum(case when isRadiant = FALSE then maxLastHits end) as maxLastHitsDire,
    sum(case when isRadiant = FALSE then maxLevel end) as maxLevelDire,
    sum(case when isRadiant = FALSE then maxNetWorth end) as maxNetWorthDire,
    sum(case when isRadiant = FALSE then maxRoshansKilled end) as maxRoshansKilledDire,
    sum(case when isRadiant = FALSE then maxRunePickups end) as maxRunePickupsDire,
    sum(case when isRadiant = FALSE then maxXpPerMin end) as maxXpPerMinDire,
    sum(case when isRadiant = FALSE then maxWin end) as maxWinDire,
    sum(case when isRadiant = FALSE then maxTotalGold end) as maxTotalGoldDire,
    sum(case when isRadiant = FALSE then maxTotalXp end) as maxTotalXpDire,
    sum(case when isRadiant = FALSE then maxKillsPerMin end) as maxKillsPerMinDire,
    sum(case when isRadiant = FALSE then maxKda end) as maxKdaDire,
    sum(case when isRadiant = FALSE then maxNeutralKills end) as maxNeutralKillsDire,
    sum(case when isRadiant = FALSE then maxTowerKills end) as maxTowerKillsDire,
    sum(case when isRadiant = FALSE then maxCourierKills end) as maxCourierKillsDire,
    sum(case when isRadiant = FALSE then maxLaneKills end) as maxLaneKillsDire,
    sum(case when isRadiant = FALSE then maxHeroKills end) as maxHeroKillsDire,
    sum(case when isRadiant = FALSE then maxObserverKills end) as maxObserverKillsDire,
    sum(case when isRadiant = FALSE then maxSentryKills end) as maxSentryKillsDire,
    sum(case when isRadiant = FALSE then maxRoshanKills end) as maxRoshanKillsDire,
    sum(case when isRadiant = FALSE then maxNecronomiconKills end) as maxNecronomiconKillsDire,
    sum(case when isRadiant = FALSE then maxAncientKills end) as maxAncientKillsDire,
    sum(case when isRadiant = FALSE then maxBuybackCount end) as maxBuybackCountDire,
    sum(case when isRadiant = FALSE then maxObserverUses end) as maxObserverUsesDire,
    sum(case when isRadiant = FALSE then maxSentryUses end) as maxSentryUsesDire,
    sum(case when isRadiant = FALSE then maxLaneEfficiency end) as maxLaneEfficiencyDire

  from summary

group by 1,2
)

select * from tb_case

-- COMMAND ----------

select * from bronze.dota.match_players
